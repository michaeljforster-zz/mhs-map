;;;; map.paren

(in-package #:mhs-map)

(defvar *site-list* nil)
(defvar *list-widget* nil)
(defvar *map* nil)


;; TODO this below works; now what do we need to do to switch to :municipality mode?
;; (setf (site-list-mode *site-list*) :municipality)
;; (setf (site-list-municipality-name *site-list*) "Winnipeg")

(defun initialize ()
  (ps:chain (j-query "#list-view") (hide))
  (ps:chain (j-query "#map-canvas") (show))
  (ps:chain (j-query "#list-button")
            (click #'(lambda ()
                       (ps:chain (j-query "#list-view") (show))
                       (ps:chain (j-query "#map-canvas") (hide)))))
  (ps:chain (j-query "#map-button")
            (click #'(lambda ()
                       (ps:chain (j-query "#list-view") (hide))
                       (ps:chain (j-query "#map-canvas") (show)))))
  (setf *site-list* (ps:new (-site-list *features-uri*)))
  (setf *list-widget*
        (ps:new (-list-widget *site-list*
                              (j-query "#list-view"))))
  (site-list-subscribe-to-populated *site-list*
                                    #'(lambda ()
                                        (ps:chain console
                                                  (log (+ "LIST-WIDGET notified "
                                                          (site-list-size *site-list*))))
                                        (update-widget *list-widget*)))
  (setf *map*
        (ps:new (-map-widget *site-list*
                             (j-query "#map-canvas")
                             *default-center*
                             *default-zoom*
                             *geolocation-options*)))
  (site-list-subscribe-to-populated *site-list*
                                    #'(lambda ()
                                        (ps:chain console
                                                  (log (+ "MAP notified "
                                                          (site-list-size *site-list*))))
                                        (update-widget *map*)))
  (map-widget-listen-on-idle *map*
                             #'(lambda (map-widget)
                                 (setf (site-list-bounds *site-list*)
                                       (map-widget-bounds map-widget))))
  (ps:chain *map* google-map (set-zoom *default-zoom*))
  (ps:chain *map* google-map (pan-to *default-center*))
  )
